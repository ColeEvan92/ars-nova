//HANDLES
HANDLE_(HINSTANCE)
HANDLE_(HICON)
HANDLE_(HBRUSH)
HANDLE_(HPEN)
HANDLE_(HWND)
HANDLE_(HMENU)
HANDLE_(HBITMAP)
HANDLE_(HDC)

//STRUCTS
STRUCT_(tagWNDCLASSA, { UINT style; WNDPROC lpfnWndProc; int cbClsExtra; int cbWndExtra; HINSTANCE hInstance; HICON hIcon; HCURSOR hCursor; HBRUSH hbrBackground; LPCSTR lpszMenuName; LPCSTR lpszClassName; }, WNDCLASSA)
STRUCT_(tagWNDCLASSW, { UINT style; WNDPROC lpfnWndProc; int cbClsExtra; int cbWndExtra; HINSTANCE hInstance; HICON hIcon; HCURSOR hCursor; HBRUSH hbrBackground; LPCWSTR lpszMenuName; LPCWSTR lpszClassName; }, WNDCLASSW)
STRUCT_AW_(WNDCLASS)
STRUCT_(tagPOINT, { LONG x; LONG y; }, POINT)
STRUCT_(tagMSG, { HWND hwnd; UINT message; WPARAM wParam; LPARAM lParam; DWORD time; POINT pt; }, MSG)
STRUCT_(tagCREATESTRUCTA, { LPVOID lpCreateParams; HINSTANCE hInstance; HMENU hMenu; HWND hwndParent; int cy; int cx; int y; int x; LONG style; LPCSTR lpszName; LPCSTR lpszClass; DWORD dwExStyle; }, CREATESTRUCTA)
STRUCT_(tagCREATESTRUCTW, { LPVOID lpCreateParams; HINSTANCE hInstance; HMENU hMenu; HWND hwndParent; int cy; int cx; int y; int x; LONG style; LPCWSTR lpszName; LPCWSTR lpszClass; DWORD dwExStyle; }, CREATESTRUCTW)
STRUCT_AW_(CREATESTRUCT)
STRUCT_(tagRECT, { LONG left; LONG top; LONG right; LONG bottom; }, RECT)
STRUCT_(tagPAINTSTRUCT, { HDC hdc; BOOL fErase; RECT rcPaint; BOOL fRestore; BOOL fIncUpdate; BYTE rgbReserved[32]; }, PAINTSTRUCT)
STRUCT_(tagSIZE, { LONG cx; LONG cy; }, SIZE)
STRUCT_(tagBITMAP, { LONG bmType; LONG bmWidth; LONG bmHeight; LONG bmWidthBytes; WORD bmPlanes; WORD bmBitsPixel; LPVOID bmBits; }, BITMAP)
STRUCT_(tagPOINTS, { SHORT x; SHORT y; }, POINTS)
STRUCT_(tagWNDCLASSEXA, { UINT cbSize; UINT style; WNDPROC lpfnWndProc; int cbClsExtra; int cbWndExtra; HINSTANCE hInstance; HICON hIcon; HCURSOR hCursor; HBRUSH hbrBackground; LPCSTR lpszMenuName; LPCSTR lpszClassName; HICON hIconSm; }, WNDCLASSEXA)
STRUCT_(tagWNDCLASSEXW, { UINT cbSize; UINT style; WNDPROC lpfnWndProc; int cbClsExtra; int cbWndExtra; HINSTANCE hInstance; HICON hIcon; HCURSOR hCursor; HBRUSH hbrBackground; LPCWSTR lpszMenuName; LPCWSTR lpszClassName; HICON hIconSm; }, WNDCLASSEXW)
STRUCT_AW_(WNDCLASSEX)
STRUCT_(tagWINDOWINFO, { DWORD cbSize; RECT rcWindow; RECT rcClient; DWORD dwStyle; DWORD dwExStyle; DWORD dwWindowStatus; UINT cxWindowBorders; UINT cyWindowBorders; ATOM atomWindowType; WORD wCreatorVersion; }, WINDOWINFO)
STRUCT_(tagWINDOWPLACEMENT, { UINT  length; UINT  flags; UINT  showCmd; POINT ptMinPosition; POINT ptMaxPosition; RECT  rcNormalPosition; }, WINDOWPLACEMENT)

//ALIASES
ALIAS_(short, SHORT)
ALIAS_(unsigned int, UINT)
ALIAS_(unsigned int, UINT_PTR)
ALIAS_(UINT_PTR, WPARAM)
ALIAS_(long, LONG_PTR)
ALIAS_(LONG_PTR, LPARAM)
ALIAS_(LONG_PTR, LRESULT)
ALIAS_(unsigned short, WORD)
ALIAS_(WORD, ATOM)
ALIAS_(unsigned long, DWORD)
ALIAS_(int, BOOL)
ALIAS_(long, LONG)
ALIAS_(unsigned char, BYTE)
EXOTIC_ALIAS_(char, STR)
EXOTIC_ALIAS_(wchar_t, WSTR)
EXOTIC_ALIAS_(void, VOID)
MUNDANE_ALIAS_(LRESULT(__stdcall*)(HWND, UINT, WPARAM, LPARAM), WNDPROC)
MUNDANE_ALIAS_(HICON, HCURSOR)
MUNDANE_ALIAS_(void*, HANDLE)
MUNDANE_ALIAS_(void*, HGDIOBJ)
MUNDANE_ALIAS_(DWORD, COLORREF)

//FUNCTIONS
FUNCTION_(ATOM, RegisterClassW, (const WNDCLASSW*), (lpWndClass), (const WNDCLASSW* lpWndClass))
FUNCTION_(ATOM, RegisterClassA, (const WNDCLASSA*), (lpWndClass), (const WNDCLASSA* lpWndClass))
FUNCTION_AW_(RegisterClass)
FUNCTION_(BOOL, UnregisterClassW, (LPCWSTR, HINSTANCE), (lpClassName, hInstance), (LPCWSTR lpClassName, HINSTANCE hInstance))
FUNCTION_(BOOL, UnregisterClassA, (LPCSTR, HINSTANCE), (lpClassName, hInstance), (LPCSTR lpClassName, HINSTANCE hInstance))
FUNCTION_AW_(UnregisterClass)
FUNCTION_(int, MessageBoxA, (HWND, LPCSTR, LPCSTR, UINT), (hWnd, lpText, lpCaption, uType), (HWND hWnd, LPCSTR lpText, LPCSTR lpCaption, UINT uType))
FUNCTION_(int, MessageBoxW, (HWND, LPCWSTR, LPCWSTR, UINT), (hWnd, lpText, lpCaption, uType), (HWND hWnd, LPCWSTR lpText, LPCWSTR lpCaption, UINT uType))
FUNCTION_AW_(MessageBox)
FUNCTION_(HWND, CreateWindowExA, (DWORD, LPCSTR, LPCSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, LPVOID), (dwExStyle, lpClassName, lpWindowName, dwStyle, X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam), (DWORD dwExStyle, LPCSTR lpClassName, LPCSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam))
FUNCTION_(HWND, CreateWindowExW, (DWORD, LPCWSTR, LPCWSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, LPVOID), (dwExStyle, lpClassName, lpWindowName, dwStyle, X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, lpParam), (DWORD dwExStyle, LPCWSTR lpClassName, LPCWSTR lpWindowName, DWORD dwStyle, int X, int Y, int nWidth, int nHeight, HWND hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam))
FUNCTION_AW_(CreateWindowEx)
FUNCTION_(BOOL, ShowWindow, (HWND, int), (hWnd, nCmdShow), (HWND hWnd, int nCmdShow))
FUNCTION_(BOOL, UpdateWindow, (HWND), (hWnd), (HWND hWnd))
FUNCTION_(BOOL, GetMessageA, (LPMSG, HWND, UINT, UINT), (lpMsg, hWnd, wMsgFilterMin, wMsgFilterMax), (LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax))
FUNCTION_(BOOL, GetMessageW, (LPMSG, HWND, UINT, UINT), (lpMsg, hWnd, wMsgFilterMin, wMsgFilterMax), (LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax))
FUNCTION_AW_(GetMessage)
FUNCTION_(BOOL, PeekMessageA, (LPMSG, HWND, UINT, UINT, UINT), (lpMsg, hWnd, wMsgFilterMin, wMsgFilterMax, wRemoveMsg), (LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax, UINT wRemoveMsg))
FUNCTION_(BOOL, PeekMessageW, (LPMSG, HWND, UINT, UINT, UINT), (lpMsg, hWnd, wMsgFilterMin, wMsgFilterMax, wRemoveMsg), (LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax, UINT wRemoveMsg))
FUNCTION_AW_(PeekMessage)
FUNCTION_(BOOL, TranslateMessage, (const LPMSG), (lpMsg), (const LPMSG lpMsg))
FUNCTION_(LRESULT, DispatchMessageA, (const LPMSG), (lpMsg), (const LPMSG lpMsg))
FUNCTION_(LRESULT, DispatchMessageW, (const LPMSG), (lpMsg), (const LPMSG lpMsg))
FUNCTION_AW_(DispatchMessage)
FUNCTION_(LRESULT, DefWindowProcA, (HWND, UINT, WPARAM, LPARAM), (hwnd, msg, wParam, lParam), (HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam))
FUNCTION_(LRESULT, DefWindowProcW, (HWND, UINT, WPARAM, LPARAM), (hwnd, msg, wParam, lParam), (HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam))
FUNCTION_AW_(DefWindowProc)
FUNCTION_(void, PostQuitMessage, (int), (nExitCode), (int nExitCode))
FUNCTION_(BOOL, DestroyWindow, (HWND), (hWnd), (HWND hWnd))
FUNCTION_(DWORD, GetLastError, (), (), ())
FUNCTION_(HDC, GetDC, (HWND), (hWnd), (HWND hWnd))
FUNCTION_(int, ReleaseDC, (HWND, HDC), (hWnd, hDC), (HWND hWnd, HDC hDC))
FUNCTION_(HDC, CreateCompatibleDC, (HDC), (hdc), (HDC hdc))
FUNCTION_(BOOL, DeleteDC, (HDC), (hdc), (HDC hdc))
FUNCTION_(HBITMAP, CreateCompatibleBitmap, (HDC, int, int), (hDC, cx, cy), (HDC hDC, int cx, int cy))
FUNCTION_(HGDIOBJ, SelectObject, (HDC, HGDIOBJ), (hdc, h), (HDC hdc, HGDIOBJ h))
FUNCTION_(int, GetObjectA, (HANDLE, int, LPVOID), (h, c, pv), (HANDLE h, int c, LPVOID pv))
FUNCTION_(int, GetObjectW, (HANDLE, int, LPVOID), (h, c, pv), (HANDLE h, int c, LPVOID pv))
FUNCTION_AW_(GetObject)
FUNCTION_(HGDIOBJ, GetCurrentObject, (HDC, UINT), (hdc, type), (HDC hdc, UINT type))
FUNCTION_(HANDLE, LoadImageA, (HINSTANCE, LPCSTR, UINT, int, int, UINT), (hInst, name, type, cx, cy, fuLoad), (HINSTANCE hInst, LPCSTR name, UINT type, int cx, int cy, UINT fuLoad))
FUNCTION_(HANDLE, LoadImageW, (HINSTANCE, LPCWSTR, UINT, int, int, UINT), (hInst, name, type, cx, cy, fuLoad), (HINSTANCE hInst, LPCWSTR name, UINT type, int cx, int cy, UINT fuLoad))
FUNCTION_AW_(LoadImage)
FUNCTION_(BOOL, BitBlt, (HDC, int, int, int, int, HDC, int, int, DWORD), (hdc, x, y, cx, cy, hdcSrc, x1, y1, rop), (HDC hdc, int x, int y, int cx, int cy, HDC hdcSrc, int x1, int y1, DWORD rop))
FUNCTION_(BOOL, StretchBlt, (HDC, int, int, int, int, HDC, int, int, int, int, DWORD), (hdcDest, xDest, yDest, wDest, hDest, hdcSrc, xSrc, ySrc, wSrc, hSrc, rop), (HDC hdcDest, int xDest, int yDest, int wDest, int hDest, HDC hdcSrc, int xSrc, int ySrc, int wSrc, int hSrc, DWORD rop))
FUNCTION_(HBRUSH, CreateSolidBrush, (COLORREF), (color), (COLORREF color))
FUNCTION_(HPEN, CreatePen, (int, int, COLORREF), (iStyle, cWidth, color), (int iStyle, int cWidth, COLORREF color))
FUNCTION_(BOOL, Rectangle, (HDC, int, int, int, int), (hdc, left, top, right, bottom), (HDC hdc, int left, int top, int right, int bottom))
FUNCTION_(int, FillRect, (HDC, const RECT*, HBRUSH), (hDC, lprc, hbr), (HDC hDC, const RECT* lprc, HBRUSH hbr))
FUNCTION_(int, DrawTextA, (HDC, LPCSTR, int, LPRECT, UINT), (hdc, lpchText, cchText, lprc, format), (HDC hdc, LPCSTR lpchText, int cchText, LPRECT lprc, UINT format))
FUNCTION_(int, DrawTextW, (HDC, LPCWSTR, int, LPRECT, UINT), (hdc, lpchText, cchText, lprc, format), (HDC hdc, LPCWSTR lpchText, int cchText, LPRECT lprc, UINT format))
FUNCTION_AW_(DrawText)
FUNCTION_(BOOL, GetWindowRect, (HWND, LPRECT), (hWnd, lpRect), (HWND hWnd, LPRECT lpRect))
FUNCTION_(BOOL, GetClientRect, (HWND, LPRECT), (hWnd, lpRect), (HWND hWnd, LPRECT lpRect))
FUNCTION_(BOOL, MoveWindow, (HWND, int, int, int, int, BOOL), (hWnd, X, Y, nWidth, nHeight, bRepaint), (HWND hWnd, int X, int Y, int nWidth, int nHeight, BOOL bRepaint))
FUNCTION_(BOOL, IsWindow, (HWND), (hWnd), (HWND hWnd))
FUNCTION_(BOOL, DeleteObject, (HGDIOBJ), (ho), (HGDIOBJ ho))
FUNCTION_(HDC, BeginPaint, (HWND, LPPAINTSTRUCT), (hWnd, lpPaint), (HWND hWnd, LPPAINTSTRUCT lpPaint));
FUNCTION_(BOOL, EndPaint, (HWND, const PAINTSTRUCT*), (hWnd, lpPaint), (HWND hWnd, const PAINTSTRUCT* lpPaint))
FUNCTION_(BOOL, PostMessageA, (HWND, UINT, WPARAM, LPARAM), (hWnd, Msg, wParam, lParam), (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam))
FUNCTION_(BOOL, PostMessageW, (HWND, UINT, WPARAM, LPARAM), (hWnd, Msg, wParam, lParam), (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam))
FUNCTION_AW_(PostMessage)
FUNCTION_(LRESULT, SendMessageA, (HWND, UINT, WPARAM, LPARAM), (hWnd, Msg, wParam, lParam), (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam))
FUNCTION_(LRESULT, SendMessageW, (HWND, UINT, WPARAM, LPARAM), (hWnd, Msg, wParam, lParam), (HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam))
FUNCTION_AW_(SendMessage)
FUNCTION_(COLORREF, SetPixel, (HDC, int, int, COLORREF), (hdc, x, y, color), (HDC hdc, int x, int y, COLORREF color))
FUNCTION_(BOOL, InvalidateRect, (HWND, const RECT*, BOOL), (hWnd, lpRect, bErase), (HWND hWnd, const RECT* lpRect, BOOL bErase))
MACRO_(LPWSTR, MAKEINTRESOURCEW, (i), (long i))
MACRO_(LPSTR, MAKEINTRESOURCEA, (i), (long i))
FUNCTION_AW_(MAKEINTRESOURCE)
FUNCTION_(int, ShowCursor, (BOOL), (bShow), (BOOL bShow))
FUNCTION_(BOOL, GetTextExtentPoint32A, (HDC, LPCSTR, int, LPSIZE), (hdc, lpString, c, lpsizl), (HDC hdc, LPCSTR lpString, int c, LPSIZE lpsizl))
FUNCTION_(BOOL, GetTextExtentPoint32W, (HDC, LPCWSTR, int, LPSIZE), (hdc, lpString, c, lpsizl), (HDC hdc, LPCWSTR lpString, int c, LPSIZE lpsizl))
FUNCTION_AW_(GetTextExtentPoint32)
FUNCTION_(COLORREF, SetTextColor, (HDC, COLORREF), (hdc, color), (HDC hdc, COLORREF color))
FUNCTION_(COLORREF, SetBkColor, (HDC, COLORREF), (hdc, color), (HDC hdc, COLORREF color))
FUNCTION_(BOOL, SetWindowTextA, (HWND, LPCSTR), (hWnd, lpString), (HWND hWnd, LPCSTR lpString))
FUNCTION_(BOOL, SetWindowTextW, (HWND, LPCWSTR), (hWnd, lpString), (HWND hWnd, LPCWSTR lpString))
FUNCTION_AW_(SetWindowText)
FUNCTION_(HWND, SetCapture, (HWND), (hWnd), (HWND hWnd))
FUNCTION_(BOOL, ReleaseCapture, (), (), ())
FUNCTION_(BOOL, ClientToScreen, (HWND, LPPOINT), (hWnd, lpPoint), (HWND hWnd, LPPOINT lpPoint))
FUNCTION_(BOOL, ScreenToClient, (HWND, LPPOINT), (hWnd, lpPoint), (HWND hWnd, LPPOINT lpPoint))
FUNCTION_(ATOM, RegisterClassExA, (const WNDCLASSEXA*), (lpwc), (const WNDCLASSEXA* lpwc))
FUNCTION_(ATOM, RegisterClassExW, (const WNDCLASSEXW*), (lpwc), (const WNDCLASSEXW* lpwc))
FUNCTION_AW_(RegisterClassEx)
FUNCTION_(BOOL, PostThreadMessageA, (DWORD, UINT, WPARAM, LPARAM), (idThread, Msg, wParam, lParam), (DWORD idThread, UINT Msg, WPARAM wParam, LPARAM lParam))
FUNCTION_(BOOL, PostThreadMessageW, (DWORD, UINT, WPARAM, LPARAM), (idThread, Msg, wParam, lParam), (DWORD idThread, UINT Msg, WPARAM wParam, LPARAM lParam))
FUNCTION_AW_(PostThreadMessage)
FUNCTION_(DWORD, GetThreadId, (HANDLE), (Thread), (HANDLE Thread))
FUNCTION_(BOOL, GetWindowInfo, (HWND, PWINDOWINFO), (hwnd, pwi), (HWND hwnd, PWINDOWINFO pwi))
FUNCTION_(BOOL, IsWindowVisible, (HWND), (hWnd), (HWND hWnd))
FUNCTION_(BOOL, IsWindowEnabled, (HWND), (hWnd), (HWND hWnd))
FUNCTION_(int, GetWindowTextA, (HWND, LPSTR, int), (hWnd, lpString, nMaxCount), (HWND hWnd, LPSTR lpString, int nMaxCount))
FUNCTION_(int, GetWindowTextW, (HWND, LPWSTR, int), (hWnd, lpString, nMaxCount), (HWND hWnd, LPWSTR lpString, int nMaxCount))
FUNCTION_AW_(GetWindowText)
FUNCTION_(HWND, SetActiveWindow, (HWND), (hWnd), (HWND hWnd))
FUNCTION_(BOOL, EnableWindow, (HWND, BOOL), (hWnd, bEnable), (HWND hWnd, BOOL bEnable))
FUNCTION_(BOOL, GetWindowPlacement, (HWND, WINDOWPLACEMENT*), (hWnd, lpwndpl), (HWND hWnd, WINDOWPLACEMENT* lpwndpl))
FUNCTION_(BOOL, CloseWindow, (HWND), (hWnd), (HWND hWnd))
FUNCTION_(int, SetBkMode, (HDC, int), (hdc, mode), (HDC hdc, int mode))
FUNCTION_(HANDLE, CopyImage, (HANDLE, UINT, int, int, UINT), (h, type, cx, cy, flags), (HANDLE h, UINT type, int cx, int cy, UINT flags))
FUNCTION_(COLORREF, GetPixel, (HDC, int, int), (hdc, x, y), (HDC hdc, int x, int y))
FUNCTION_(BOOL, Ellipse, (HDC, int, int, int, int), (hdc, left, top, right, bottom), (HDC hdc, int left, int top, int right, int bottom))

//OCR_
CONSTANT_(long, OCR_NORMAL, 32512)
CONSTANT_(long, OCR_IBEAM, 32513)
CONSTANT_(long, OCR_WAIT, 32514)
CONSTANT_(long, OCR_CROSS, 32515)
CONSTANT_(long, OCR_UP, 32516)
CONSTANT_(long, OCR_SIZENWSE, 32642)
CONSTANT_(long, OCR_SIZENESW, 32643)
CONSTANT_(long, OCR_SIZEWE, 32644)
CONSTANT_(long, OCR_SIZENS, 32645)
CONSTANT_(long, OCR_SIZEALL, 32646)
CONSTANT_(long, OCR_NO, 32648)
CONSTANT_(long, OCR_HAND, 32649)
CONSTANT_(long, OCR_APPSTARTING, 32650)
//OIC_
CONSTANT_(long, OIC_SAMPLE, 32512)
CONSTANT_(long, OIC_HAND, 32513)
CONSTANT_(long, OIC_QUES, 32514)
CONSTANT_(long, OIC_BANG, 32515)
CONSTANT_(long, OIC_NOTE, 32516)
CONSTANT_(long, OIC_WINLOGO, 32517)
CONSTANT_(long, OIC_WARNING, OIC_BANG)
CONSTANT_(long, OIC_ERROR, OIC_HAND)
CONSTANT_(long, OIC_INFORMATION, OIC_NOTE)
CONSTANT_(long, OIC_SHIELD, 32518)
//MB_
CONSTANT_(UINT, MB_OK, 0x00000000L)
CONSTANT_(UINT, MB_OKCANCEL, 0x00000001L)
CONSTANT_(UINT, MB_ABORTRETRYIGNORE, 0x00000002L)
CONSTANT_(UINT, MB_YESNOCANCEL, 0x00000003L)
CONSTANT_(UINT, MB_YESNO, 0x00000004L)
CONSTANT_(UINT, MB_RETRYCANCEL, 0x00000005L)
CONSTANT_(UINT, MB_CANCELTRYCONTINUE, 0x00000006L)
CONSTANT_(UINT, MB_ICONHAND, 0x00000010L)
CONSTANT_(UINT, MB_ICONQUESTION, 0x00000020L)
CONSTANT_(UINT, MB_ICONEXCLAMATION, 0x00000030L)
CONSTANT_(UINT, MB_ICONASTERISK, 0x00000040L)
CONSTANT_(UINT, MB_USERICON, 0x00000080L)
CONSTANT_(UINT, MB_ICONWARNING, MB_ICONEXCLAMATION)
CONSTANT_(UINT, MB_ICONERROR, MB_ICONHAND)
CONSTANT_(UINT, MB_ICONINFORMATION, MB_ICONASTERISK)
CONSTANT_(UINT, MB_ICONSTOP, MB_ICONHAND)
CONSTANT_(UINT, MB_DEFBUTTON1, 0x00000000L)
CONSTANT_(UINT, MB_DEFBUTTON2, 0x00000100L)
CONSTANT_(UINT, MB_DEFBUTTON3, 0x00000200L)
CONSTANT_(UINT, MB_DEFBUTTON4, 0x00000300L)
CONSTANT_(UINT, MB_APPLMODAL, 0x00000000L)
CONSTANT_(UINT, MB_SYSTEMMODAL, 0x00001000L)
CONSTANT_(UINT, MB_TASKMODAL, 0x00002000L)
CONSTANT_(UINT, MB_HELP, 0x00004000L)
CONSTANT_(UINT, MB_NOFOCUS, 0x00008000L)
CONSTANT_(UINT, MB_SETFOREGROUND, 0x00010000L)
CONSTANT_(UINT, MB_DEFAULT_DESKTOP_ONLY, 0x00020000L)
CONSTANT_(UINT, MB_TOPMOST, 0x00040000L)
CONSTANT_(UINT, MB_RIGHT, 0x00080000L)
CONSTANT_(UINT, MB_RTLREADING, 0x00100000L)
CONSTANT_(UINT, MB_SERVICE_NOTIFICATION, 0x00200000L)
CONSTANT_(UINT, MB_SERVICE_NOTIFICATION_NT3X, 0x00040000L)
CONSTANT_(UINT, MB_TYPEMASK, 0x0000000FL)
CONSTANT_(UINT, MB_ICONMASK, 0x000000F0L)
CONSTANT_(UINT, MB_DEFMASK, 0x00000F00L)
CONSTANT_(UINT, MB_MODEMASK, 0x00003000L)
CONSTANT_(UINT, MB_MISCMASK, 0x0000C000L)
//PM_
CONSTANT_(UINT, PM_NOREMOVE, 0x0)
CONSTANT_(UINT, PM_REMOVE, 0x1)
CONSTANT_(UINT, PM_NOYIELD, 0x2)
//MK_
CONSTANT_(UINT, MK_LBUTTON, 0x0001)
CONSTANT_(UINT, MK_RBUTTON, 0x0002)
CONSTANT_(UINT, MK_SHIFT, 0x0004)
CONSTANT_(UINT, MK_CONTROL, 0x0008)
CONSTANT_(UINT, MK_MBUTTON, 0x0010)
//WM_
CONSTANT_(UINT, WM_NULL, 0x0000)
CONSTANT_(UINT, WM_CREATE, 0x0001)
CONSTANT_(UINT, WM_DESTROY, 0x0002)
CONSTANT_(UINT, WM_MOVE, 0x0003)
CONSTANT_(UINT, WM_SIZE, 0x0005)
CONSTANT_(UINT, WM_ACTIVATE, 0x0006)
CONSTANT_(UINT, WM_SETFOCUS, 0x0007)
CONSTANT_(UINT, WM_KILLFOCUS, 0x0008)
CONSTANT_(UINT, WM_ENABLE, 0x000A)
CONSTANT_(UINT, WM_SETREDRAW, 0x000B)
CONSTANT_(UINT, WM_SETTEXT, 0x000C)
CONSTANT_(UINT, WM_GETTEXT, 0x000D)
CONSTANT_(UINT, WM_GETTEXTLENGTH, 0x000E)
CONSTANT_(UINT, WM_PAINT, 0x000F)
CONSTANT_(UINT, WM_CLOSE, 0x0010)
CONSTANT_(UINT, WM_QUERYENDSESSION, 0x0011)
CONSTANT_(UINT, WM_QUERYOPEN, 0x0013)
CONSTANT_(UINT, WM_ENDSESSION, 0x0016)
CONSTANT_(UINT, WM_QUIT, 0x0012)
CONSTANT_(UINT, WM_ERASEBKGND, 0x0014)
CONSTANT_(UINT, WM_SYSCOLORCHANGE, 0x0015)
CONSTANT_(UINT, WM_SHOWWINDOW, 0x0018)
CONSTANT_(UINT, WM_WININICHANGE, 0x001A)
CONSTANT_(UINT, WM_SETTINGCHANGE, WM_WININICHANGE)
CONSTANT_(UINT, WM_DEVMODECHANGE, 0x001B)
CONSTANT_(UINT, WM_ACTIVATEAPP, 0x001C)
CONSTANT_(UINT, WM_FONTCHANGE, 0x001D)
CONSTANT_(UINT, WM_TIMECHANGE, 0x001E)
CONSTANT_(UINT, WM_CANCELMODE, 0x001F)
CONSTANT_(UINT, WM_SETCURSOR, 0x0020)
CONSTANT_(UINT, WM_MOUSEACTIVATE, 0x0021)
CONSTANT_(UINT, WM_CHILDACTIVATE, 0x0022)
CONSTANT_(UINT, WM_QUEUESYNC, 0x0023)
CONSTANT_(UINT, WM_GETMINMAXINFO, 0x0024)
CONSTANT_(UINT, WM_PAINTICON, 0x0026)
CONSTANT_(UINT, WM_ICONERASEBKGND, 0x0027)
CONSTANT_(UINT, WM_NEXTDLGCTL, 0x0028)
CONSTANT_(UINT, WM_SPOOLERSTATUS, 0x002A)
CONSTANT_(UINT, WM_DRAWITEM, 0x002B)
CONSTANT_(UINT, WM_MEASUREITEM, 0x002C)
CONSTANT_(UINT, WM_DELETEITEM, 0x002D)
CONSTANT_(UINT, WM_VKEYTOITEM, 0x002E)
CONSTANT_(UINT, WM_CHARTOITEM, 0x002F)
CONSTANT_(UINT, WM_SETFONT, 0x0030)
CONSTANT_(UINT, WM_GETFONT, 0x0031)
CONSTANT_(UINT, WM_SETHOTKEY, 0x0032)
CONSTANT_(UINT, WM_GETHOTKEY, 0x0033)
CONSTANT_(UINT, WM_QUERYDRAGICON, 0x0037)
CONSTANT_(UINT, WM_COMPAREITEM, 0x0039)
CONSTANT_(UINT, WM_GETOBJECT, 0x003D)
CONSTANT_(UINT, WM_COMPACTING, 0x0041)
CONSTANT_(UINT, WM_COMMNOTIFY, 0x0044)
CONSTANT_(UINT, WM_WINDOWPOSCHANGING, 0x0046)
CONSTANT_(UINT, WM_WINDOWPOSCHANGED, 0x0047)
CONSTANT_(UINT, WM_POWER, 0x0048)
CONSTANT_(UINT, WM_COPYDATA, 0x004A)
CONSTANT_(UINT, WM_CANCELJOURNAL, 0x004B)
CONSTANT_(UINT, WM_NOTIFY, 0x004E)
CONSTANT_(UINT, WM_INPUTLANGCHANGEREQUEST, 0x0050)
CONSTANT_(UINT, WM_INPUTLANGCHANGE, 0x0051)
CONSTANT_(UINT, WM_TCARD, 0x0052)
CONSTANT_(UINT, WM_HELP, 0x0053)
CONSTANT_(UINT, WM_USERCHANGED, 0x0054)
CONSTANT_(UINT, WM_NOTIFYFORMAT, 0x0055)
CONSTANT_(UINT, WM_CONTEXTMENU, 0x007B)
CONSTANT_(UINT, WM_STYLECHANGING, 0x007C)
CONSTANT_(UINT, WM_STYLECHANGED, 0x007D)
CONSTANT_(UINT, WM_DISPLAYCHANGE, 0x007E)
CONSTANT_(UINT, WM_GETICON, 0x007F)
CONSTANT_(UINT, WM_SETICON, 0x0080)
CONSTANT_(UINT, WM_NCCREATE, 0x0081)
CONSTANT_(UINT, WM_NCDESTROY, 0x0082)
CONSTANT_(UINT, WM_NCCALCSIZE, 0x0083)
CONSTANT_(UINT, WM_NCHITTEST, 0x0084)
CONSTANT_(UINT, WM_NCPAINT, 0x0085)
CONSTANT_(UINT, WM_NCACTIVATE, 0x0086)
CONSTANT_(UINT, WM_GETDLGCODE, 0x0087)
CONSTANT_(UINT, WM_SYNCPAINT, 0x0088)
CONSTANT_(UINT, WM_NCMOUSEMOVE, 0x00A0)
CONSTANT_(UINT, WM_NCLBUTTONDOWN, 0x00A1)
CONSTANT_(UINT, WM_NCLBUTTONUP, 0x00A2)
CONSTANT_(UINT, WM_NCLBUTTONDBLCLK, 0x00A3)
CONSTANT_(UINT, WM_NCRBUTTONDOWN, 0x00A4)
CONSTANT_(UINT, WM_NCRBUTTONUP, 0x00A5)
CONSTANT_(UINT, WM_NCRBUTTONDBLCLK, 0x00A6)
CONSTANT_(UINT, WM_NCMBUTTONDOWN, 0x00A7)
CONSTANT_(UINT, WM_NCMBUTTONUP, 0x00A8)
CONSTANT_(UINT, WM_NCMBUTTONDBLCLK, 0x00A9)
CONSTANT_(UINT, WM_NCXBUTTONDOWN, 0x00AB)
CONSTANT_(UINT, WM_NCXBUTTONUP, 0x00AC)
CONSTANT_(UINT, WM_NCXBUTTONDBLCLK, 0x00AD)
CONSTANT_(UINT, WM_INPUT_DEVICE_CHANGE, 0x00FE)
CONSTANT_(UINT, WM_INPUT, 0x00FF)
CONSTANT_(UINT, WM_KEYFIRST, 0x0100)
CONSTANT_(UINT, WM_KEYDOWN, 0x0100)
CONSTANT_(UINT, WM_KEYUP, 0x0101)
CONSTANT_(UINT, WM_CHAR, 0x0102)
CONSTANT_(UINT, WM_DEADCHAR, 0x0103)
CONSTANT_(UINT, WM_SYSKEYDOWN, 0x0104)
CONSTANT_(UINT, WM_SYSKEYUP, 0x0105)
CONSTANT_(UINT, WM_SYSCHAR, 0x0106)
CONSTANT_(UINT, WM_SYSDEADCHAR, 0x0107)
CONSTANT_(UINT, WM_UNICHAR, 0x0109)
CONSTANT_(UINT, WM_KEYLAST, 0x0109)
CONSTANT_(UINT, WM_IME_STARTCOMPOSITION, 0x010D)
CONSTANT_(UINT, WM_IME_ENDCOMPOSITION, 0x010E)
CONSTANT_(UINT, WM_IME_COMPOSITION, 0x010F)
CONSTANT_(UINT, WM_IME_KEYLAST, 0x010F)
CONSTANT_(UINT, WM_INITDIALOG, 0x0110)
CONSTANT_(UINT, WM_COMMAND, 0x0111)
CONSTANT_(UINT, WM_SYSCOMMAND, 0x0112)
CONSTANT_(UINT, WM_TIMER, 0x0113)
CONSTANT_(UINT, WM_HSCROLL, 0x0114)
CONSTANT_(UINT, WM_VSCROLL, 0x0115)
CONSTANT_(UINT, WM_INITMENU, 0x0116)
CONSTANT_(UINT, WM_INITMENUPOPUP, 0x0117)
CONSTANT_(UINT, WM_GESTURE, 0x0119)
CONSTANT_(UINT, WM_GESTURENOTIFY, 0x011A)
CONSTANT_(UINT, WM_MENUSELECT, 0x011F)
CONSTANT_(UINT, WM_MENUCHAR, 0x0120)
CONSTANT_(UINT, WM_ENTERIDLE, 0x0121)
CONSTANT_(UINT, WM_MENURBUTTONUP, 0x0122)
CONSTANT_(UINT, WM_MENUDRAG, 0x0123)
CONSTANT_(UINT, WM_MENUGETOBJECT, 0x0124)
CONSTANT_(UINT, WM_UNINITMENUPOPUP, 0x0125)
CONSTANT_(UINT, WM_MENUCOMMAND, 0x0126)
CONSTANT_(UINT, WM_CHANGEUISTATE, 0x0127)
CONSTANT_(UINT, WM_UPDATEUISTATE, 0x0128)
CONSTANT_(UINT, WM_QUERYUISTATE, 0x0129)
CONSTANT_(UINT, WM_CTLCOLORMSGBOX, 0x0132)
CONSTANT_(UINT, WM_CTLCOLOREDIT, 0x0133)
CONSTANT_(UINT, WM_CTLCOLORLISTBOX, 0x0134)
CONSTANT_(UINT, WM_CTLCOLORBTN, 0x0135)
CONSTANT_(UINT, WM_CTLCOLORDLG, 0x0136)
CONSTANT_(UINT, WM_CTLCOLORSCROLLBAR, 0x0137)
CONSTANT_(UINT, WM_CTLCOLORSTATIC, 0x0138)
CONSTANT_(UINT, WM_MOUSEFIRST, 0x0200)
CONSTANT_(UINT, WM_MOUSEMOVE, 0x0200)
CONSTANT_(UINT, WM_LBUTTONDOWN, 0x0201)
CONSTANT_(UINT, WM_LBUTTONUP, 0x0202)
CONSTANT_(UINT, WM_LBUTTONDBLCLK, 0x0203)
CONSTANT_(UINT, WM_RBUTTONDOWN, 0x0204)
CONSTANT_(UINT, WM_RBUTTONUP, 0x0205)
CONSTANT_(UINT, WM_RBUTTONDBLCLK, 0x0206)
CONSTANT_(UINT, WM_MBUTTONDOWN, 0x0207)
CONSTANT_(UINT, WM_MBUTTONUP, 0x0208)
CONSTANT_(UINT, WM_MBUTTONDBLCLK, 0x0209)
CONSTANT_(UINT, WM_MOUSEWHEEL, 0x020A)
CONSTANT_(UINT, WM_XBUTTONDOWN, 0x020B)
CONSTANT_(UINT, WM_XBUTTONUP, 0x020C)
CONSTANT_(UINT, WM_XBUTTONDBLCLK, 0x020D)
CONSTANT_(UINT, WM_MOUSEHWHEEL, 0x020E)
CONSTANT_(UINT, WM_MOUSELAST, 0x020E)
CONSTANT_(UINT, WM_PARENTNOTIFY, 0x0210)
CONSTANT_(UINT, WM_ENTERMENULOOP, 0x0211)
CONSTANT_(UINT, WM_EXITMENULOOP, 0x0212)
CONSTANT_(UINT, WM_NEXTMENU, 0x0213)
CONSTANT_(UINT, WM_SIZING, 0x0214)
CONSTANT_(UINT, WM_CAPTURECHANGED, 0x0215)
CONSTANT_(UINT, WM_MOVING, 0x0216)
CONSTANT_(UINT, WM_POWERBROADCAST, 0x0218)
CONSTANT_(UINT, WM_DEVICECHANGE, 0x0219)
CONSTANT_(UINT, WM_MDICREATE, 0x0220)
CONSTANT_(UINT, WM_MDIDESTROY, 0x0221)
CONSTANT_(UINT, WM_MDIACTIVATE, 0x0222)
CONSTANT_(UINT, WM_MDIRESTORE, 0x0223)
CONSTANT_(UINT, WM_MDINEXT, 0x0224)
CONSTANT_(UINT, WM_MDIMAXIMIZE, 0x0225)
CONSTANT_(UINT, WM_MDITILE, 0x0226)
CONSTANT_(UINT, WM_MDICASCADE, 0x0227)
CONSTANT_(UINT, WM_MDIICONARRANGE, 0x0228)
CONSTANT_(UINT, WM_MDIGETACTIVE, 0x0229)
CONSTANT_(UINT, WM_MDISETMENU, 0x0230)
CONSTANT_(UINT, WM_ENTERSIZEMOVE, 0x0231)
CONSTANT_(UINT, WM_EXITSIZEMOVE, 0x0232)
CONSTANT_(UINT, WM_DROPFILES, 0x0233)
CONSTANT_(UINT, WM_MDIREFRESHMENU, 0x0234)
CONSTANT_(UINT, WM_POINTERDEVICECHANGE, 0x238)
CONSTANT_(UINT, WM_POINTERDEVICEINRANGE, 0x239)
CONSTANT_(UINT, WM_POINTERDEVICEOUTOFRANGE, 0x23A)
CONSTANT_(UINT, WM_TOUCH, 0x0240)
CONSTANT_(UINT, WM_NCPOINTERUPDATE, 0x0241)
CONSTANT_(UINT, WM_NCPOINTERDOWN, 0x0242)
CONSTANT_(UINT, WM_NCPOINTERUP, 0x0243)
CONSTANT_(UINT, WM_POINTERUPDATE, 0x0245)
CONSTANT_(UINT, WM_POINTERDOWN, 0x0246)
CONSTANT_(UINT, WM_POINTERUP, 0x0247)
CONSTANT_(UINT, WM_POINTERENTER, 0x0249)
CONSTANT_(UINT, WM_POINTERLEAVE, 0x024A)
CONSTANT_(UINT, WM_POINTERACTIVATE, 0x024B)
CONSTANT_(UINT, WM_POINTERCAPTURECHANGED, 0x024C)
CONSTANT_(UINT, WM_TOUCHHITTESTING, 0x024D)
CONSTANT_(UINT, WM_POINTERWHEEL, 0x024E)
CONSTANT_(UINT, WM_POINTERHWHEEL, 0x024F)
CONSTANT_(UINT, WM_POINTERROUTEDTO, 0x0251)
CONSTANT_(UINT, WM_POINTERROUTEDAWAY, 0x0252)
CONSTANT_(UINT, WM_POINTERROUTEDRELEASED, 0x0253)
CONSTANT_(UINT, WM_IME_SETCONTEXT, 0x0281)
CONSTANT_(UINT, WM_IME_NOTIFY, 0x0282)
CONSTANT_(UINT, WM_IME_CONTROL, 0x0283)
CONSTANT_(UINT, WM_IME_COMPOSITIONFULL, 0x0284)
CONSTANT_(UINT, WM_IME_SELECT, 0x0285)
CONSTANT_(UINT, WM_IME_CHAR, 0x0286)
CONSTANT_(UINT, WM_IME_REQUEST, 0x0288)
CONSTANT_(UINT, WM_IME_KEYDOWN, 0x0290)
CONSTANT_(UINT, WM_IME_KEYUP, 0x0291)
CONSTANT_(UINT, WM_MOUSEHOVER, 0x02A1)
CONSTANT_(UINT, WM_MOUSELEAVE, 0x02A3)
CONSTANT_(UINT, WM_NCMOUSEHOVER, 0x02A0)
CONSTANT_(UINT, WM_NCMOUSELEAVE, 0x02A2)
CONSTANT_(UINT, WM_WTSSESSION_CHANGE, 0x02B1)
CONSTANT_(UINT, WM_TABLET_FIRST, 0x02c0)
CONSTANT_(UINT, WM_TABLET_LAST, 0x02df)
CONSTANT_(UINT, WM_DPICHANGED, 0x02E0)
CONSTANT_(UINT, WM_DPICHANGED_BEFOREPARENT, 0x02E2)
CONSTANT_(UINT, WM_DPICHANGED_AFTERPARENT, 0x02E3)
CONSTANT_(UINT, WM_GETDPISCALEDSIZE, 0x02E4)
CONSTANT_(UINT, WM_CUT, 0x0300)
CONSTANT_(UINT, WM_COPY, 0x0301)
CONSTANT_(UINT, WM_PASTE, 0x0302)
CONSTANT_(UINT, WM_CLEAR, 0x0303)
CONSTANT_(UINT, WM_UNDO, 0x0304)
CONSTANT_(UINT, WM_RENDERFORMAT, 0x0305)
CONSTANT_(UINT, WM_RENDERALLFORMATS, 0x0306)
CONSTANT_(UINT, WM_DESTROYCLIPBOARD, 0x0307)
CONSTANT_(UINT, WM_DRAWCLIPBOARD, 0x0308)
CONSTANT_(UINT, WM_PAINTCLIPBOARD, 0x0309)
CONSTANT_(UINT, WM_VSCROLLCLIPBOARD, 0x030A)
CONSTANT_(UINT, WM_SIZECLIPBOARD, 0x030B)
CONSTANT_(UINT, WM_ASKCBFORMATNAME, 0x030C)
CONSTANT_(UINT, WM_CHANGECBCHAIN, 0x030D)
CONSTANT_(UINT, WM_HSCROLLCLIPBOARD, 0x030E)
CONSTANT_(UINT, WM_QUERYNEWPALETTE, 0x030F)
CONSTANT_(UINT, WM_PALETTEISCHANGING, 0x0310)
CONSTANT_(UINT, WM_PALETTECHANGED, 0x0311)
CONSTANT_(UINT, WM_HOTKEY, 0x0312)
CONSTANT_(UINT, WM_PRINT, 0x0317)
CONSTANT_(UINT, WM_PRINTCLIENT, 0x0318)
CONSTANT_(UINT, WM_APPCOMMAND, 0x0319)
CONSTANT_(UINT, WM_THEMECHANGED, 0x031A)
CONSTANT_(UINT, WM_CLIPBOARDUPDATE, 0x031D)
CONSTANT_(UINT, WM_DWMCOMPOSITIONCHANGED, 0x031E)
CONSTANT_(UINT, WM_DWMNCRENDERINGCHANGED, 0x031F)
CONSTANT_(UINT, WM_DWMCOLORIZATIONCOLORCHANGED, 0x0320)
CONSTANT_(UINT, WM_DWMWINDOWMAXIMIZEDCHANGE, 0x0321)
CONSTANT_(UINT, WM_DWMSENDICONICTHUMBNAIL, 0x0323)
CONSTANT_(UINT, WM_DWMSENDICONICLIVEPREVIEWBITMAP, 0x0326)
CONSTANT_(UINT, WM_GETTITLEBARINFOEX, 0x033F)
CONSTANT_(UINT, WM_HANDHELDFIRST, 0x0358)
CONSTANT_(UINT, WM_HANDHELDLAST, 0x035F)
CONSTANT_(UINT, WM_AFXFIRST, 0x0360)
CONSTANT_(UINT, WM_AFXLAST, 0x037F)
CONSTANT_(UINT, WM_PENWINFIRST, 0x0380)
CONSTANT_(UINT, WM_PENWINLAST, 0x038F)
CONSTANT_(UINT, WM_APP, 0x8000)
CONSTANT_(UINT, WM_USER, 0x0400)
//CW_
CONSTANT_(int, CW_USEDEFAULT, 0x80000000)
//SC_
CONSTANT_(UINT, SC_SIZE, 0xF000)
CONSTANT_(UINT, SC_MOVE, 0xF010)
CONSTANT_(UINT, SC_MINIMIZE, 0xF020)
CONSTANT_(UINT, SC_MAXIMIZE, 0xF030)
CONSTANT_(UINT, SC_NEXTWINDOW, 0xF040)
CONSTANT_(UINT, SC_PREVWINDOW, 0xF050)
CONSTANT_(UINT, SC_CLOSE, 0xF060)
CONSTANT_(UINT, SC_VSCROLL, 0xF070)
CONSTANT_(UINT, SC_HSCROLL, 0xF080)
CONSTANT_(UINT, SC_MOUSEMENU, 0xF090)
CONSTANT_(UINT, SC_KEYMENU, 0xF100)
CONSTANT_(UINT, SC_ARRANGE, 0xF110)
CONSTANT_(UINT, SC_RESTORE, 0xF120)
CONSTANT_(UINT, SC_TASKLIST, 0xF130)
CONSTANT_(UINT, SC_SCREENSAVE, 0xF140)
CONSTANT_(UINT, SC_HOTKEY, 0xF150)
CONSTANT_(UINT, SC_DEFAULT, 0xF160)
CONSTANT_(UINT, SC_MONITORPOWER, 0xF170)
CONSTANT_(UINT, SC_CONTEXTHELP, 0xF180)
CONSTANT_(UINT, SC_SEPARATOR, 0xF00F)
//WS_
CONSTANT_(DWORD, WS_OVERLAPPED, 0x00000000L)
CONSTANT_(DWORD, WS_POPUP, 0x80000000L)
CONSTANT_(DWORD, WS_CHILD, 0x40000000L)
CONSTANT_(DWORD, WS_MINIMIZE, 0x20000000L)
CONSTANT_(DWORD, WS_VISIBLE, 0x10000000L)
CONSTANT_(DWORD, WS_DISABLED, 0x08000000L)
CONSTANT_(DWORD, WS_CLIPSIBLINGS, 0x04000000L)
CONSTANT_(DWORD, WS_CLIPCHILDREN, 0x02000000L)
CONSTANT_(DWORD, WS_MAXIMIZE, 0x01000000L)
CONSTANT_(DWORD, WS_CAPTION, 0x00C00000L)
CONSTANT_(DWORD, WS_BORDER, 0x00800000L)
CONSTANT_(DWORD, WS_DLGFRAME, 0x00400000L)
CONSTANT_(DWORD, WS_VSCROLL, 0x00200000L)
CONSTANT_(DWORD, WS_HSCROLL, 0x00100000L)
CONSTANT_(DWORD, WS_SYSMENU, 0x00080000L)
CONSTANT_(DWORD, WS_THICKFRAME, 0x00040000L)
CONSTANT_(DWORD, WS_GROUP, 0x00020000L)
CONSTANT_(DWORD, WS_TABSTOP, 0x00010000L)
CONSTANT_(DWORD, WS_MINIMIZEBOX, 0x00020000L)
CONSTANT_(DWORD, WS_MAXIMIZEBOX, 0x00010000L)
CONSTANT_(DWORD, WS_TILED, WS_OVERLAPPED)
CONSTANT_(DWORD, WS_ICONIC, WS_MINIMIZE)
CONSTANT_(DWORD, WS_SIZEBOX, WS_THICKFRAME)
CONSTANT_(DWORD, WS_OVERLAPPEDWINDOW, WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX)
CONSTANT_(DWORD, WS_TILEDWINDOW, WS_OVERLAPPEDWINDOW)
CONSTANT_(DWORD, WS_POPUPWINDOW, WS_POPUP | WS_BORDER | WS_SYSMENU)
CONSTANT_(DWORD, WS_CHILDWINDOW, WS_CHILD)
//WS_EX_
CONSTANT_(DWORD, WS_EX_DLGMODALFRAME, 0x00000001L)
CONSTANT_(DWORD, WS_EX_NOPARENTNOTIFY, 0x00000004L)
CONSTANT_(DWORD, WS_EX_TOPMOST, 0x00000008L)
CONSTANT_(DWORD, WS_EX_ACCEPTFILES, 0x00000010L)
CONSTANT_(DWORD, WS_EX_TRANSPARENT, 0x00000020L)
CONSTANT_(DWORD, WS_EX_MDICHILD, 0x00000040L)
CONSTANT_(DWORD, WS_EX_TOOLWINDOW, 0x00000080L)
CONSTANT_(DWORD, WS_EX_WINDOWEDGE, 0x00000100L)
CONSTANT_(DWORD, WS_EX_CLIENTEDGE, 0x00000200L)
CONSTANT_(DWORD, WS_EX_CONTEXTHELP, 0x00000400L)
CONSTANT_(DWORD, WS_EX_RIGHT, 0x00001000L)
CONSTANT_(DWORD, WS_EX_LEFT, 0x00000000L)
CONSTANT_(DWORD, WS_EX_RTLREADING, 0x00002000L)
CONSTANT_(DWORD, WS_EX_LTRREADING, 0x00000000L)
CONSTANT_(DWORD, WS_EX_LEFTSCROLLBAR, 0x00004000L)
CONSTANT_(DWORD, WS_EX_RIGHTSCROLLBAR, 0x00000000L)
CONSTANT_(DWORD, WS_EX_CONTROLPARENT, 0x00010000L)
CONSTANT_(DWORD, WS_EX_STATICEDGE, 0x00020000L)
CONSTANT_(DWORD, WS_EX_APPWINDOW, 0x00040000L)
CONSTANT_(DWORD, WS_EX_OVERLAPPEDWINDOW, WS_EX_WINDOWEDGE | WS_EX_CLIENTEDGE)
CONSTANT_(DWORD, WS_EX_PALETTEWINDOW, WS_EX_WINDOWEDGE | WS_EX_TOOLWINDOW | WS_EX_TOPMOST)
CONSTANT_(DWORD, WS_EX_LAYERED, 0x00080000)
CONSTANT_(DWORD, WS_EX_NOINHERITLAYOUT, 0x00100000L)
CONSTANT_(DWORD, WS_EX_NOREDIRECTIONBITMAP, 0x00200000L)
CONSTANT_(DWORD, WS_EX_LAYOUTRTL, 0x00400000L)
CONSTANT_(DWORD, WS_EX_COMPOSITED, 0x02000000L)
CONSTANT_(DWORD, WS_EX_NOACTIVATE, 0x08000000L)
//CS_
CONSTANT_(UINT, CS_VREDRAW, 0x0001)
CONSTANT_(UINT, CS_HREDRAW, 0x0002)
CONSTANT_(UINT, CS_DBLCLKS, 0x0008)
CONSTANT_(UINT, CS_OWNDC, 0x0020)
CONSTANT_(UINT, CS_CLASSDC, 0x0040)
CONSTANT_(UINT, CS_PARENTDC, 0x0080)
CONSTANT_(UINT, CS_NOCLOSE, 0x0200)
CONSTANT_(UINT, CS_SAVEBITS, 0x0800)
CONSTANT_(UINT, CS_BYTEALIGNCLIENT, 0x1000)
CONSTANT_(UINT, CS_BYTEALIGNWINDOW, 0x2000)
CONSTANT_(UINT, CS_GLOBALCLASS, 0x4000)
//SW_
CONSTANT_(int, SW_HIDE, 0)
CONSTANT_(int, SW_SHOWNORMAL, 1)
CONSTANT_(int, SW_NORMAL, 1)
CONSTANT_(int, SW_SHOWMINIMIZED, 2)
CONSTANT_(int, SW_SHOWMAXIMIZED, 3)
CONSTANT_(int, SW_MAXIMIZE, 3)
CONSTANT_(int, SW_SHOWNOACTIVATE, 4)
CONSTANT_(int, SW_SHOW, 5)
CONSTANT_(int, SW_MINIMIZE, 6)
CONSTANT_(int, SW_SHOWMINNOACTIVE, 7)
CONSTANT_(int, SW_SHOWNA, 8)
CONSTANT_(int, SW_RESTORE, 9)
CONSTANT_(int, SW_SHOWDEFAULT, 10)
CONSTANT_(int, SW_FORCEMINIMIZE, 11)
CONSTANT_(int, SW_MAX, 11)
//PS_
CONSTANT_(int, PS_SOLID, 0)
//LR_
CONSTANT_(UINT, LR_DEFAULTCOLOR, 0x00000000)
CONSTANT_(UINT, LR_MONOCHROME, 0x00000001)
CONSTANT_(UINT, LR_COLOR, 0x00000002)
CONSTANT_(UINT, LR_COPYRETURNORG, 0x00000004)
CONSTANT_(UINT, LR_COPYDELETEORG, 0x00000008)
CONSTANT_(UINT, LR_LOADFROMFILE, 0x00000010)
CONSTANT_(UINT, LR_LOADTRANSPARENT, 0x00000020)
CONSTANT_(UINT, LR_DEFAULTSIZE, 0x00000040)
CONSTANT_(UINT, LR_VGACOLOR, 0x00000080)
CONSTANT_(UINT, LR_LOADMAP3DCOLORS, 0x00001000)
CONSTANT_(UINT, LR_CREATEDIBSECTION, 0x00002000)
CONSTANT_(UINT, LR_COPYFROMRESOURCE, 0x00004000)
CONSTANT_(UINT, LR_SHARED, 0x00008000)
//DT_
CONSTANT_(UINT, DT_TOP, 0x00000000)
CONSTANT_(UINT, DT_LEFT, 0x00000000)
CONSTANT_(UINT, DT_CENTER, 0x00000001)
CONSTANT_(UINT, DT_RIGHT, 0x00000002)
CONSTANT_(UINT, DT_VCENTER, 0x00000004)
CONSTANT_(UINT, DT_BOTTOM, 0x00000008)
CONSTANT_(UINT, DT_WORDBREAK, 0x00000010)
CONSTANT_(UINT, DT_SINGLELINE, 0x00000020)
CONSTANT_(UINT, DT_EXPANDTABS, 0x00000040)
CONSTANT_(UINT, DT_TABSTOP, 0x00000080)
CONSTANT_(UINT, DT_NOCLIP, 0x00000100)
CONSTANT_(UINT, DT_EXTERNALLEADING, 0x00000200)
CONSTANT_(UINT, DT_CALCRECT, 0x00000400)
CONSTANT_(UINT, DT_NOPREFIX, 0x00000800)
CONSTANT_(UINT, DT_INTERNAL, 0x00001000)
CONSTANT_(UINT, DT_EDITCONTROL, 0x00002000)
CONSTANT_(UINT, DT_PATH_ELLIPSIS, 0x00004000)
CONSTANT_(UINT, DT_END_ELLIPSIS, 0x00008000)
CONSTANT_(UINT, DT_MODIFYSTRING, 0x00010000)
CONSTANT_(UINT, DT_RTLREADING, 0x00020000)
CONSTANT_(UINT, DT_WORD_ELLIPSIS, 0x00040000)
CONSTANT_(UINT, DT_NOFULLWIDTHCHARBREAK, 0x00080000)
CONSTANT_(UINT, DT_HIDEPREFIX, 0x00100000)
CONSTANT_(UINT, DT_PREFIXONLY, 0x00200000)
//OBJ_
CONSTANT_(UINT, OBJ_PEN, 1)
CONSTANT_(UINT, OBJ_BRUSH, 2)
CONSTANT_(UINT, OBJ_DC, 3)
CONSTANT_(UINT, OBJ_METADC, 4)
CONSTANT_(UINT, OBJ_PAL, 5)
CONSTANT_(UINT, OBJ_FONT, 6)
CONSTANT_(UINT, OBJ_BITMAP, 7)
CONSTANT_(UINT, OBJ_REGION, 8)
CONSTANT_(UINT, OBJ_METAFILE, 9)
CONSTANT_(UINT, OBJ_MEMDC, 10)
CONSTANT_(UINT, OBJ_EXTPEN, 11)
CONSTANT_(UINT, OBJ_ENHMETADC, 12)
CONSTANT_(UINT, OBJ_ENHMETAFILE, 13)
CONSTANT_(UINT, OBJ_COLORSPACE, 14)
//VK_
CONSTANT_(WPARAM, VK_LBUTTON, 0x01)
CONSTANT_(WPARAM, VK_RBUTTON, 0x02)
CONSTANT_(WPARAM, VK_CANCEL, 0x03)
CONSTANT_(WPARAM, VK_MBUTTON, 0x04)
CONSTANT_(WPARAM, VK_XBUTTON1, 0x05)
CONSTANT_(WPARAM, VK_XBUTTON2, 0x06)
CONSTANT_(WPARAM, VK_BACK, 0x08)
CONSTANT_(WPARAM, VK_TAB, 0x09)
CONSTANT_(WPARAM, VK_CLEAR, 0x0C)
CONSTANT_(WPARAM, VK_RETURN, 0x0D)
CONSTANT_(WPARAM, VK_SHIFT, 0x10)
CONSTANT_(WPARAM, VK_CONTROL, 0x11)
CONSTANT_(WPARAM, VK_MENU, 0x12)
CONSTANT_(WPARAM, VK_PAUSE, 0x13)
CONSTANT_(WPARAM, VK_CAPITAL, 0x14)
CONSTANT_(WPARAM, VK_KANA, 0x15)
CONSTANT_(WPARAM, VK_HANGEUL, 0x15)
CONSTANT_(WPARAM, VK_HANGUL, 0x15)
CONSTANT_(WPARAM, VK_JUNJA, 0x17)
CONSTANT_(WPARAM, VK_FINAL, 0x18)
CONSTANT_(WPARAM, VK_HANJA, 0x19)
CONSTANT_(WPARAM, VK_KANJI, 0x19)
CONSTANT_(WPARAM, VK_ESCAPE, 0x1B)
CONSTANT_(WPARAM, VK_CONVERT, 0x1C)
CONSTANT_(WPARAM, VK_NONCONVERT, 0x1D)
CONSTANT_(WPARAM, VK_ACCEPT, 0x1E)
CONSTANT_(WPARAM, VK_MODECHANGE, 0x1F)
CONSTANT_(WPARAM, VK_SPACE, 0x20)
CONSTANT_(WPARAM, VK_PRIOR, 0x21)
CONSTANT_(WPARAM, VK_NEXT, 0x22)
CONSTANT_(WPARAM, VK_END, 0x23)
CONSTANT_(WPARAM, VK_HOME, 0x24)
CONSTANT_(WPARAM, VK_LEFT, 0x25)
CONSTANT_(WPARAM, VK_UP, 0x26)
CONSTANT_(WPARAM, VK_RIGHT, 0x27)
CONSTANT_(WPARAM, VK_DOWN, 0x28)
CONSTANT_(WPARAM, VK_SELECT, 0x29)
CONSTANT_(WPARAM, VK_PRINT, 0x2A)
CONSTANT_(WPARAM, VK_EXECUTE, 0x2B)
CONSTANT_(WPARAM, VK_SNAPSHOT, 0x2C)
CONSTANT_(WPARAM, VK_INSERT, 0x2D)
CONSTANT_(WPARAM, VK_DELETE, 0x2E)
CONSTANT_(WPARAM, VK_HELP, 0x2F)
CONSTANT_(WPARAM, VK_LWIN, 0x5B)
CONSTANT_(WPARAM, VK_RWIN, 0x5C)
CONSTANT_(WPARAM, VK_APPS, 0x5D)
CONSTANT_(WPARAM, VK_SLEEP, 0x5F)
CONSTANT_(WPARAM, VK_NUMPAD0, 0x60)
CONSTANT_(WPARAM, VK_NUMPAD1, 0x61)
CONSTANT_(WPARAM, VK_NUMPAD2, 0x62)
CONSTANT_(WPARAM, VK_NUMPAD3, 0x63)
CONSTANT_(WPARAM, VK_NUMPAD4, 0x64)
CONSTANT_(WPARAM, VK_NUMPAD5, 0x65)
CONSTANT_(WPARAM, VK_NUMPAD6, 0x66)
CONSTANT_(WPARAM, VK_NUMPAD7, 0x67)
CONSTANT_(WPARAM, VK_NUMPAD8, 0x68)
CONSTANT_(WPARAM, VK_NUMPAD9, 0x69)
CONSTANT_(WPARAM, VK_MULTIPLY, 0x6A)
CONSTANT_(WPARAM, VK_ADD, 0x6B)
CONSTANT_(WPARAM, VK_SEPARATOR, 0x6C)
CONSTANT_(WPARAM, VK_SUBTRACT, 0x6D)
CONSTANT_(WPARAM, VK_DECIMAL, 0x6E)
CONSTANT_(WPARAM, VK_DIVIDE, 0x6F)
CONSTANT_(WPARAM, VK_F1, 0x70)
CONSTANT_(WPARAM, VK_F2, 0x71)
CONSTANT_(WPARAM, VK_F3, 0x72)
CONSTANT_(WPARAM, VK_F4, 0x73)
CONSTANT_(WPARAM, VK_F5, 0x74)
CONSTANT_(WPARAM, VK_F6, 0x75)
CONSTANT_(WPARAM, VK_F7, 0x76)
CONSTANT_(WPARAM, VK_F8, 0x77)
CONSTANT_(WPARAM, VK_F9, 0x78)
CONSTANT_(WPARAM, VK_F10, 0x79)
CONSTANT_(WPARAM, VK_F11, 0x7A)
CONSTANT_(WPARAM, VK_F12, 0x7B)
CONSTANT_(WPARAM, VK_F13, 0x7C)
CONSTANT_(WPARAM, VK_F14, 0x7D)
CONSTANT_(WPARAM, VK_F15, 0x7E)
CONSTANT_(WPARAM, VK_F16, 0x7F)
CONSTANT_(WPARAM, VK_F17, 0x80)
CONSTANT_(WPARAM, VK_F18, 0x81)
CONSTANT_(WPARAM, VK_F19, 0x82)
CONSTANT_(WPARAM, VK_F20, 0x83)
CONSTANT_(WPARAM, VK_F21, 0x84)
CONSTANT_(WPARAM, VK_F22, 0x85)
CONSTANT_(WPARAM, VK_F23, 0x86)
CONSTANT_(WPARAM, VK_F24, 0x87)
CONSTANT_(WPARAM, VK_NAVIGATION_VIEW, 0x88)
CONSTANT_(WPARAM, VK_NAVIGATION_MENU, 0x89)
CONSTANT_(WPARAM, VK_NAVIGATION_UP, 0x8A)
CONSTANT_(WPARAM, VK_NAVIGATION_DOWN, 0x8B)
CONSTANT_(WPARAM, VK_NAVIGATION_LEFT, 0x8C)
CONSTANT_(WPARAM, VK_NAVIGATION_RIGHT, 0x8D)
CONSTANT_(WPARAM, VK_NAVIGATION_ACCEPT, 0x8E)
CONSTANT_(WPARAM, VK_NAVIGATION_CANCEL, 0x8F)
CONSTANT_(WPARAM, VK_NUMLOCK, 0x90)
CONSTANT_(WPARAM, VK_SCROLL, 0x91)
CONSTANT_(WPARAM, VK_OEM_NEC_EQUAL, 0x92)
CONSTANT_(WPARAM, VK_OEM_FJ_JISHO, 0x92)
CONSTANT_(WPARAM, VK_OEM_FJ_MASSHOU, 0x93)
CONSTANT_(WPARAM, VK_OEM_FJ_TOUROKU, 0x94)
CONSTANT_(WPARAM, VK_OEM_FJ_LOYA, 0x95)
CONSTANT_(WPARAM, VK_OEM_FJ_ROYA, 0x96)
CONSTANT_(WPARAM, VK_LSHIFT, 0xA0)
CONSTANT_(WPARAM, VK_RSHIFT, 0xA1)
CONSTANT_(WPARAM, VK_LCONTROL, 0xA2)
CONSTANT_(WPARAM, VK_RCONTROL, 0xA3)
CONSTANT_(WPARAM, VK_LMENU, 0xA4)
CONSTANT_(WPARAM, VK_RMENU, 0xA5)
CONSTANT_(WPARAM, VK_BROWSER_BACK, 0xA6)
CONSTANT_(WPARAM, VK_BROWSER_FORWARD, 0xA7)
CONSTANT_(WPARAM, VK_BROWSER_REFRESH, 0xA8)
CONSTANT_(WPARAM, VK_BROWSER_STOP, 0xA9)
CONSTANT_(WPARAM, VK_BROWSER_SEARCH, 0xAA)
CONSTANT_(WPARAM, VK_BROWSER_FAVORITES, 0xAB)
CONSTANT_(WPARAM, VK_BROWSER_HOME, 0xAC)
CONSTANT_(WPARAM, VK_VOLUME_MUTE, 0xAD)
CONSTANT_(WPARAM, VK_VOLUME_DOWN, 0xAE)
CONSTANT_(WPARAM, VK_VOLUME_UP, 0xAF)
CONSTANT_(WPARAM, VK_MEDIA_NEXT_TRACK, 0xB0)
CONSTANT_(WPARAM, VK_MEDIA_PREV_TRACK, 0xB1)
CONSTANT_(WPARAM, VK_MEDIA_STOP, 0xB2)
CONSTANT_(WPARAM, VK_MEDIA_PLAY_PAUSE, 0xB3)
CONSTANT_(WPARAM, VK_LAUNCH_MAIL, 0xB4)
CONSTANT_(WPARAM, VK_LAUNCH_MEDIA_SELECT, 0xB5)
CONSTANT_(WPARAM, VK_LAUNCH_APP1, 0xB6)
CONSTANT_(WPARAM, VK_LAUNCH_APP2, 0xB7)
CONSTANT_(WPARAM, VK_OEM_1, 0xBA)
CONSTANT_(WPARAM, VK_OEM_PLUS, 0xBB)
CONSTANT_(WPARAM, VK_OEM_COMMA, 0xBC)
CONSTANT_(WPARAM, VK_OEM_MINUS, 0xBD)
CONSTANT_(WPARAM, VK_OEM_PERIOD, 0xBE)
CONSTANT_(WPARAM, VK_OEM_2, 0xBF)
CONSTANT_(WPARAM, VK_OEM_3, 0xC0)
CONSTANT_(WPARAM, VK_GAMEPAD_A, 0xC3)
CONSTANT_(WPARAM, VK_GAMEPAD_B, 0xC4)
CONSTANT_(WPARAM, VK_GAMEPAD_X, 0xC5)
CONSTANT_(WPARAM, VK_GAMEPAD_Y, 0xC6)
CONSTANT_(WPARAM, VK_GAMEPAD_RIGHT_SHOULDER, 0xC7)
CONSTANT_(WPARAM, VK_GAMEPAD_LEFT_SHOULDER, 0xC8)
CONSTANT_(WPARAM, VK_GAMEPAD_LEFT_TRIGGER, 0xC9)
CONSTANT_(WPARAM, VK_GAMEPAD_RIGHT_TRIGGER, 0xCA)
CONSTANT_(WPARAM, VK_GAMEPAD_DPAD_UP, 0xCB)
CONSTANT_(WPARAM, VK_GAMEPAD_DPAD_DOWN, 0xCC)
CONSTANT_(WPARAM, VK_GAMEPAD_DPAD_LEFT, 0xCD)
CONSTANT_(WPARAM, VK_GAMEPAD_DPAD_RIGHT, 0xCE)
CONSTANT_(WPARAM, VK_GAMEPAD_MENU, 0xCF)
CONSTANT_(WPARAM, VK_GAMEPAD_VIEW, 0xD0)
CONSTANT_(WPARAM, VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON, 0xD1)
CONSTANT_(WPARAM, VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON, 0xD2)
CONSTANT_(WPARAM, VK_GAMEPAD_LEFT_THUMBSTICK_UP, 0xD3)
CONSTANT_(WPARAM, VK_GAMEPAD_LEFT_THUMBSTICK_DOWN, 0xD4)
CONSTANT_(WPARAM, VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT, 0xD5)
CONSTANT_(WPARAM, VK_GAMEPAD_LEFT_THUMBSTICK_LEFT, 0xD6)
CONSTANT_(WPARAM, VK_GAMEPAD_RIGHT_THUMBSTICK_UP, 0xD7)
CONSTANT_(WPARAM, VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN, 0xD8)
CONSTANT_(WPARAM, VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT, 0xD9)
CONSTANT_(WPARAM, VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT, 0xDA)
CONSTANT_(WPARAM, VK_OEM_4, 0xDB)
CONSTANT_(WPARAM, VK_OEM_5, 0xDC)
CONSTANT_(WPARAM, VK_OEM_6, 0xDD)
CONSTANT_(WPARAM, VK_OEM_7, 0xDE)
CONSTANT_(WPARAM, VK_OEM_8, 0xDF)
CONSTANT_(WPARAM, VK_OEM_AX, 0xE1)
CONSTANT_(WPARAM, VK_OEM_102, 0xE2)
CONSTANT_(WPARAM, VK_ICO_HELP, 0xE3)
CONSTANT_(WPARAM, VK_ICO_00, 0xE4)
CONSTANT_(WPARAM, VK_PROCESSKEY, 0xE5)
CONSTANT_(WPARAM, VK_ICO_CLEAR, 0xE6)
CONSTANT_(WPARAM, VK_PACKET, 0xE7)
CONSTANT_(WPARAM, VK_OEM_RESET, 0xE9)
CONSTANT_(WPARAM, VK_OEM_JUMP, 0xEA)
CONSTANT_(WPARAM, VK_OEM_PA1, 0xEB)
CONSTANT_(WPARAM, VK_OEM_PA2, 0xEC)
CONSTANT_(WPARAM, VK_OEM_PA3, 0xED)
CONSTANT_(WPARAM, VK_OEM_WSCTRL, 0xEE)
CONSTANT_(WPARAM, VK_OEM_CUSEL, 0xEF)
CONSTANT_(WPARAM, VK_OEM_ATTN, 0xF0)
CONSTANT_(WPARAM, VK_OEM_FINISH, 0xF1)
CONSTANT_(WPARAM, VK_OEM_COPY, 0xF2)
CONSTANT_(WPARAM, VK_OEM_AUTO, 0xF3)
CONSTANT_(WPARAM, VK_OEM_ENLW, 0xF4)
CONSTANT_(WPARAM, VK_OEM_BACKTAB, 0xF5)
CONSTANT_(WPARAM, VK_ATTN, 0xF6)
CONSTANT_(WPARAM, VK_CRSEL, 0xF7)
CONSTANT_(WPARAM, VK_EXSEL, 0xF8)
CONSTANT_(WPARAM, VK_EREOF, 0xF9)
CONSTANT_(WPARAM, VK_PLAY, 0xFA)
CONSTANT_(WPARAM, VK_ZOOM, 0xFB)
CONSTANT_(WPARAM, VK_NONAME, 0xFC)
CONSTANT_(WPARAM, VK_PA1, 0xFD)
CONSTANT_(WPARAM, VK_OEM_CLEAR, 0xFE)
//HT
CONSTANT_(LRESULT, HTERROR, (-2))
CONSTANT_(LRESULT, HTTRANSPARENT, (-1))
CONSTANT_(LRESULT, HTNOWHERE, 0)
CONSTANT_(LRESULT, HTCLIENT, 1)
CONSTANT_(LRESULT, HTCAPTION, 2)
CONSTANT_(LRESULT, HTSYSMENU, 3)
CONSTANT_(LRESULT, HTGROWBOX, 4)
CONSTANT_(LRESULT, HTSIZE, HTGROWBOX)
CONSTANT_(LRESULT, HTMENU, 5)
CONSTANT_(LRESULT, HTHSCROLL, 6)
CONSTANT_(LRESULT, HTVSCROLL, 7)
CONSTANT_(LRESULT, HTMINBUTTON, 8)
CONSTANT_(LRESULT, HTMAXBUTTON, 9)
CONSTANT_(LRESULT, HTLEFT, 10)
CONSTANT_(LRESULT, HTRIGHT, 11)
CONSTANT_(LRESULT, HTTOP, 12)
CONSTANT_(LRESULT, HTTOPLEFT, 13)
CONSTANT_(LRESULT, HTTOPRIGHT, 14)
CONSTANT_(LRESULT, HTBOTTOM, 15)
CONSTANT_(LRESULT, HTBOTTOMLEFT, 16)
CONSTANT_(LRESULT, HTBOTTOMRIGHT, 17)
CONSTANT_(LRESULT, HTBORDER, 18)
CONSTANT_(LRESULT, HTREDUCE, HTMINBUTTON)
CONSTANT_(LRESULT, HTZOOM, HTMAXBUTTON)
CONSTANT_(LRESULT, HTSIZEFIRST, HTLEFT)
CONSTANT_(LRESULT, HTSIZELAST, HTBOTTOMRIGHT)
CONSTANT_(LRESULT, HTOBJECT, 19)
CONSTANT_(LRESULT, HTCLOSE, 20)
CONSTANT_(LRESULT, HTHELP, 21)

CONSTANT_(HANDLE, INVALID_HANDLE_VALUE, (LONG_PTR)-1)
CONSTANT_(DWORD, SRCCOPY, 0x00CC0020)
CONSTANT_(UINT, IMAGE_BITMAP, 0)
CONSTANT_(UINT, IMAGE_ICON, 1)
CONSTANT_(UINT, IMAGE_CURSOR, 2)
CONSTANT_(int, TRANSPARENT, 1)
CONSTANT_(int, OPAQUE, 2)